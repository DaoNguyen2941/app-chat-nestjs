import { Process, Processor } from '@nestjs/bull';
import { Job } from 'bull';
import { Logger } from '@nestjs/common';
import { MailerService } from '@nestjs-modules/mailer';

@Processor('mail-queue') // ƒê·ªãnh nghƒ©a h√†ng ƒë·ª£i Redis t√™n 'mail-queue'
export class MailProcessor {
  private readonly logger = new Logger(MailProcessor.name);
  constructor(private readonly mailerService: MailerService) {}

@Process('send-otp-email-verification')
  async handleSenOTPEmailVerification(job: Job<{ to: string; otp: string }>) {
    const { to, otp } = job.data;
    this.logger.log(`üì® ƒêang g·ª≠i OTP t·ªõi ${to}...`);
    try {
      await this.mailerService.sendMail({
        to,
        subject: `Your OTP - ${otp}`,
        html: `<p>Xin ch√†o,</p>
        <p>M√£ OTP ƒë·ªÉ x√°c th·ª±c email c·ªßa b·∫°n l√†: <strong>${otp}</strong></p>
        <p>M√£ OTP n√†y c√≥ hi·ªáu l·ª±c trong 5 ph√∫t. Kh√¥ng tria s·∫ª m√£ n√†y v·ªõi b·∫•t k·ª≥ ai!</p>`,
      });
    } catch (error) {
      this.logger.error(`‚ùå G·ª≠i email OTP th·∫•t b·∫°i: ${error.message}`);
      throw error;
    }
  }

}
